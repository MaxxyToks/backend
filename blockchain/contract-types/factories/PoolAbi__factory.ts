/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { PoolAbi, PoolAbiInterface } from "../PoolAbi";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "currency0",
            type: "address",
          },
          {
            internalType: "address",
            name: "currency1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
          {
            internalType: "int24",
            name: "tickSpacing",
            type: "int24",
          },
          {
            internalType: "address",
            name: "hooks",
            type: "address",
          },
        ],
        internalType: "struct PoolKey",
        name: "key",
        type: "tuple",
      },
      {
        internalType: "uint160",
        name: "sqrtPriceX96",
        type: "uint160",
      },
      {
        internalType: "bytes",
        name: "hookData",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "hookBytecode",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "hookSalt",
        type: "bytes32",
      },
    ],
    name: "deployPoolWithHook",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class PoolAbi__factory {
  static readonly abi = _abi;
  static createInterface(): PoolAbiInterface {
    return new utils.Interface(_abi) as PoolAbiInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PoolAbi {
    return new Contract(address, _abi, signerOrProvider) as PoolAbi;
  }
}
